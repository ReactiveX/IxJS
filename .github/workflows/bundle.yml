name: Bundle

on:
  workflow_call:

jobs:
  test-tree-shaking-pull-request:
    name: ${{ matrix.bundler }} ${{ matrix.target }} ${{ matrix.module }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        bundler: [esbuild, rollup, webpack]
        target: [es5, es2015, esnext]
        module: [cjs, esm, umd]
        include:
          - {bundler: esbuild, target: ix}
          - {bundler: rollup, target: ix}
          - {bundler: webpack, target: ix}
    steps:
      - name: Setup node v20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Construct cache keys
        run: |
          echo node_modules_key='["${{ runner.os }}", "node_modules", "20.x", "${{ hashFiles('package.json', 'yarn.lock') }}"]' >> $GITHUB_ENV;
          echo targets_key='["${{ runner.os }}", "targets", "20.x", "ix", "", "${{ hashFiles('package.json', 'yarn.lock', 'tsconfig.json', 'src/**/*', 'tsconfigs/**/*') }}"]' >> $GITHUB_ENV;

      - name: Cache targets
        uses: actions/cache@v4
        with:
          key: ${{ join(fromJSON(env.targets_key), '-') }}
          path: targets

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          key: ${{ join(fromJSON(env.node_modules_key), '-') }}
          path: node_modules

      - name: Test ${{ matrix.bundler }} tree-shaking
        env:
          t: "${{ matrix.target }}"
          m: "${{ matrix.module }}"
        run: |
          integration/make-files-to-bundle.sh
          if test "${t}" != ix; then
            yarn build ${t:+-t ${t}} ${m:+-m ${m}}
          fi
          yarn gulp bundle${t:+:${t}}${m:+:${m}}:${{ matrix.bundler }}

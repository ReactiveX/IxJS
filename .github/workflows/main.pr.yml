name: Build pull request

concurrency:
  group: pr-on-${{ github.event_name }}-from-${{ github.ref_name }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - "master"

jobs:
  lint-pull-request:
    name: Lint
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
        node: [20.x]
    steps:
      - name: Setup node v${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node_modules-${{ matrix.node }}-${{ hashFiles('package.json') }}
          path: |
            node_modules

      - name: Check if source or test files changed
        id: files_changed
        uses: tj-actions/changed-files@v44
        with:
          files: |
            src/**/*
            spec/**/*

      - name: Install dependencies
        if: ${{ steps.files_changed.outputs.any_modified == 'true' }}
        run: |
          yarn

      - name: Lint files
        if: ${{ steps.files_changed.outputs.any_modified == 'true' }}
        run: |
          yarn lint:ci

  build-and-test-pull-request:
    needs:
      - lint-pull-request
    name: Test
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
        node: [14.x, 16.x, 18.x, 20.x]
        module: [cjs, esm, umd]
        target: [es5, es2015, esnext]
        exclude:
          - {node: 14.x, target: esnext}
        include:
          - {node: 20.x, target: src, args: --coverage}
    steps:
      - name: Setup node v${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Cache targets
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-targets-${{ matrix.node }}-${{ matrix.target }}-${{ matrix.module }}-${{ hashFiles('package.json') }}
          path: |
            targets

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node_modules-${{ matrix.node }}-${{ matrix.target }}-${{ matrix.module }}-${{ hashFiles('package.json') }}
          path: |
            node_modules

      - name: Check if test files changed
        id: test_files_changed
        uses: tj-actions/changed-files@v44
        with:
          files: |
            spec/**/*

      - name: Check if source files changed
        id: source_files_changed
        uses: tj-actions/changed-files@v44
        with:
          files: |
            src/**/*

      - name: Install dependencies
        if: ${{ steps.source_files_changed.outputs.any_modified	== 'true' || steps.test_files_changed.outputs.any_modified	 == 'true' }}
        run: |
          yarn --ignore-optional --ignore-engines --non-interactive

      - name: Build package
        if: ${{ steps.source_files_changed.outputs.any_modified	== 'true' && matrix.target != 'src' }}
        env:
          ecmascriptver: "${{ matrix.target }}"
          module_format: "${{ matrix.module }}"
        run: |
          yarn build ${ecmascriptver:+-t ${ecmascriptver}} ${module_format:+-m ${module_format}}

      - name: Test package
        if: ${{ steps.source_files_changed.outputs.any_modified	== 'true' || steps.test_files_changed.outputs.any_modified	 == 'true' }}
        env:
          ecmascriptver: "${{ matrix.target }}"
          module_format: "${{ matrix.module }}"
        run: |
          yarn test ${ecmascriptver:+-t ${ecmascriptver}} ${module_format:+-m ${module_format}} ${{ matrix.args }}
